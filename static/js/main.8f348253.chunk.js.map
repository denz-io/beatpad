{"version":3,"sources":["audiofiles/butterly/Bass-Loop-01.flac","audiofiles/butterly/Bass-Loop-02.flac","audiofiles/butterly/Wings-Vox-01.flac","audiofiles/butterly/Wings-Vox-02.flac","audiofiles/butterly/Butterfly-Kick-04.flac","audiofiles/butterly/Butterfly-Snare-01.flac","audiofiles/butterly/Wings-Snap-01.flac","audiofiles/butterly/Butterfly-Hat-01.flac","audiofiles/butterly/Bling-Bling-Snare.flac","audiofiles/butterly/Bling-Bling-FX.flac","audiofiles/butterly/Bass-Drop.flac","audiofiles/butterly/Butterfly-Clap-01.flac","Beatpad/BeatPaddButton.js","AudioSetter/keyCode.js","AudioSetter/soundfiles.js","Beatpad/index.js","Beatpad/Beatpad.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BeatPaddButton","_ref","item","audio","useRef","react_default","a","createElement","react","onClick","paused","currentTime","play","className","id","key","ref","res","src","soundfile","keycode","type","keyCode","butterflyAudio","sound01","sound02","sound03","sound04","sound05","sound06","sound07","sound08","sound09","sound10","sound11","sound12","butterfly","map","Object","objectSpread","Beatpad","_useState","useState","_useState2","slicedToArray","drumpadData","setDrumpadData","_useState3","_useState4","audioPack","setAudioPack","handleAudioSetting","useCallback","Beatpad_BeatPaddButton","useEffect","document","addEventListener","event","triggerAudioOnKeyPress","listenTospace","getAudioTarget","getElementById","code","stopPlayback","forEach","pause","style","margin","onChange","target","value","App","src_Beatpad","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f348253.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bass-Loop-01.2f210dd9.flac\";","module.exports = __webpack_public_path__ + \"static/media/Bass-Loop-02.ea10a195.flac\";","module.exports = __webpack_public_path__ + \"static/media/Wings-Vox-01.a8c42a2a.flac\";","module.exports = __webpack_public_path__ + \"static/media/Wings-Vox-02.ec750b07.flac\";","module.exports = __webpack_public_path__ + \"static/media/Butterfly-Kick-04.c38d6963.flac\";","module.exports = __webpack_public_path__ + \"static/media/Butterfly-Snare-01.b1347a4c.flac\";","module.exports = __webpack_public_path__ + \"static/media/Wings-Snap-01.52d45bfa.flac\";","module.exports = __webpack_public_path__ + \"static/media/Butterfly-Hat-01.792b4c0c.flac\";","module.exports = __webpack_public_path__ + \"static/media/Bling-Bling-Snare.06901c6d.flac\";","module.exports = __webpack_public_path__ + \"static/media/Bling-Bling-FX.2745ee13.flac\";","module.exports = __webpack_public_path__ + \"static/media/Bass-Drop.9ff277af.flac\";","module.exports = __webpack_public_path__ + \"static/media/Butterfly-Clap-01.f93d9015.flac\";","import React, { Fragment, useRef } from \"react\"\n\nconst BeatPaddButton = ({ item }) => {\n\n    let audio = useRef();\n\n    const playAudio = () => {\n        if (!audio.paused) {\n            audio.currentTime = 0\n        }\n        audio.play();\n    }\n\n    return (\n        <Fragment>\n            <button \n                onClick={playAudio} \n                className=\"drum-pad\" \n                id={item.id}\n            >\n                <div id=\"button-inner-text\" className=\"keyboard-controls\">{item.key}</div> <audio \n                    ref={(res) => audio = res} \n                    className=\"clip\" \n                    src={item.soundfile} \n                    id={item.keycode} \n                    type=\"audio/mpeg\"\n                >\n                </audio> \n            </button>\n        </Fragment>\n    )\n}\n\nexport default BeatPaddButton\n","let keyCode = [\n    {\n        id: 1,\n        key: 'q',\n        keycode: 81,\n    }, {\n        id: 2,\n        key: 'w',\n        keycode: 87,\n    }, {\n        id: 3,\n        key: 'e',\n        keycode: 69,\n    }, {\n        id: 4,\n        key: 'r',\n        keycode: 82,\n    }, {\n        id: 5,\n        key: 'a',\n        keycode: 65,\n    }, {\n        id: 6,\n        key: 's',\n        keycode: 83,\n    }, {\n        id: 7,\n        key: 'd',\n        keycode: 68,\n    }, {\n        id: 8,\n        key: 'f',\n        keycode: 70,\n    }, {\n        id: 9,\n        key: 'z',\n        keycode: 90,\n    }, {\n        id: 10,\n        key: 'x',\n        keycode: 88,\n    }, {\n        id: 11,\n        key: 'c',\n        keycode: 67,\n    }, {\n        id: 12,\n        key: 'v',\n        keycode: 86,\n    }\n] \n\nexport default keyCode\n","import sound01 from '../audiofiles/butterly/Bass-Loop-01.flac'\nimport sound02 from '../audiofiles/butterly/Bass-Loop-02.flac'\nimport sound03 from '../audiofiles/butterly/Wings-Vox-01.flac'\nimport sound04 from '../audiofiles/butterly/Wings-Vox-02.flac'\nimport sound05 from '../audiofiles/butterly/Butterfly-Kick-04.flac'\nimport sound06 from '../audiofiles/butterly/Butterfly-Snare-01.flac'\nimport sound07 from '../audiofiles/butterly/Wings-Snap-01.flac'\nimport sound08 from '../audiofiles/butterly/Butterfly-Hat-01.flac'\nimport sound09 from '../audiofiles/butterly/Bling-Bling-Snare.flac'\nimport sound10 from '../audiofiles/butterly/Bling-Bling-FX.flac'\nimport sound11 from '../audiofiles/butterly/Bass-Drop.flac'\nimport sound12 from '../audiofiles/butterly/Butterfly-Clap-01.flac'\n\nimport keyCode from '../AudioSetter/keyCode'\n\nlet butterflyAudio = [ \n    sound01, \n    sound02, \n    sound03, \n    sound04, \n    sound05, \n    sound06, \n    sound07, \n    sound08,\n    sound09,\n    sound10,\n    sound11,\n    sound12\n]\n\nexport const butterfly = keyCode.map((res,key) => {\n    return {\n        ...res,\n        soundfile: butterflyAudio[key]\n    }\n})\n","import Beatpad from './Beatpad'\n\nexport default Beatpad;\n","import React, { useState , useEffect, useCallback } from 'react'\n\nimport BeatPaddButton from './BeatPaddButton'\nimport { butterfly }  from '../AudioSetter/soundfiles'\n\nconst BeatPad = () => {\n\n    const [ drumpadData, setDrumpadData ] = useState(null);\n    const [ audioPack, setAudioPack ] = useState(butterfly);\n\n    const handleAudioSetting = useCallback(() => {\n        if (!drumpadData && audioPack) {\n            setDrumpadData(audioPack.map((res,key) => {\n                return <BeatPaddButton \n                    item={res}\n                    key={res.id}\n                />\n            }))\n        }\n    }, [ drumpadData, audioPack ])\n\n    useEffect(() => {\n        handleAudioSetting();\n    })\n\n    document.addEventListener(\"keydown\",(event) => { \n        triggerAudioOnKeyPress(event);\n        listenTospace(event);\n    });\n\n    const triggerAudioOnKeyPress = (event) => {\n        let getAudioTarget = document.getElementById(event.keyCode)\n        if (getAudioTarget) {\n            if (!getAudioTarget.paused) {\n                getAudioTarget.currentTime = 0\n            }\n            getAudioTarget.play();\n        }\n    }\n\n    const listenTospace = (event) => {\n        if (event.code === 'Space') {\n            stopPlayback()\n        }\n    }\n\n    const stopPlayback = () => {\n        audioPack.forEach(item => !document.getElementById(item.keycode).paused && document.getElementById(item.keycode).pause());\n    }\n\n    const getAudioPack = (pack) => {\n       if (pack === 'butterfly') {\n            return butterfly;\n       }\n       return null;\n    }\n\n    return(\n        <div id=\"drum-machine\">\n            <div id=\"display\" style={{ margin: \"auto\" }}>\n                <div id=\"drum-pads\">{drumpadData ? drumpadData : \"Sorry, the audio pack is unavailable.\"}</div>\n                <div id=\"drumpad-tools\">\n                    <button id=\"sidebar-stop-button\" \n                    onClick={stopPlayback}>■ Stop playback\n                    <div className=\"keyboard-controls\">[space]</div>\n                    </button>\n                    <div className=\"sidebar-text\">Soundbank:</div>\n                    <select onChange={(event) => { \n                        setAudioPack(getAudioPack(event.target.value)) \n                        setDrumpadData(null) \n                    }}>\n                        <option value=\"butterfly\">Butterfly</option>\n                        <option value=\"tiger\">Tiger</option>\n                        <option value=\"spooky\">Spooky</option>\n                    </select>\n               </div>\n            </div>\n        </div>\n    )   \n}\n\nexport default BeatPad\n","import React from 'react';\nimport './App.css';\nimport BeatPad from './Beatpad';\n\nconst  App = () => {\n    return <BeatPad />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}